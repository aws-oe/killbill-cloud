#############################################################################################
#                                                                                           #
#                   Copyright 2010-2013 Ning, Inc.                                          #
#                   Copyright 2014 Groupon, Inc.                                            #
#                   Copyright 2014 The Billing Project, LLC                                 #
#                                                                                           #
#      The Billing Project licenses this file to you under the Apache License, version 2.0  #
#      (the "License"); you may not use this file except in compliance with the             #
#      License.  You may obtain a copy of the License at:                                   #
#                                                                                           #
#          http://www.apache.org/licenses/LICENSE-2.0                                       #
#                                                                                           #
#      Unless required by applicable law or agreed to in writing, software                  #
#      distributed under the License is distributed on an "AS IS" BASIS, WITHOUT            #
#      WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the            #
#      License for the specific language governing permissions and limitations              #
#      under the License.                                                                   #
#                                                                                           #
#############################################################################################


#
#                       DO NOT EDIT!!!
#    File automatically generated by killbill-java-parser (git@github.com:killbill/killbill-java-parser.git)
#


module Killbill
  module Plugin
    module Model

      class PluginNodeCommandMetadata


        attr_accessor :properties, :plugin_key, :plugin_name, :plugin_version

        def initialize()
        end

        def to_java()
          # conversion for properties [type = java.util.List]
          tmp = java.util.ArrayList.new
          (@properties || []).each do |m|
            # conversion for m [type = org.killbill.billing.util.nodes.NodeCommandProperty]
            m = m.to_java unless m.nil?
            tmp.add(m)
          end
          @properties = tmp

          # conversion for plugin_key [type = java.lang.String]
          @plugin_key = @plugin_key.to_s unless @plugin_key.nil?

          # conversion for plugin_name [type = java.lang.String]
          @plugin_name = @plugin_name.to_s unless @plugin_name.nil?

          # conversion for plugin_version [type = java.lang.String]
          @plugin_version = @plugin_version.to_s unless @plugin_version.nil?
          Java::org.killbill.billing.util.nodes.PluginNodeCommandMetadata.new(@properties, @plugin_key, @plugin_name, @plugin_version)
        end

        def to_ruby(j_obj)
          # conversion for properties [type = java.util.List]
          @properties = j_obj.properties
          tmp = []
          (@properties || []).each do |m|
            # conversion for m [type = org.killbill.billing.util.nodes.NodeCommandProperty]
            m = Killbill::Plugin::Model::NodeCommandProperty.new.to_ruby(m) unless m.nil?
            tmp << m
          end
          @properties = tmp

          # conversion for plugin_key [type = java.lang.String]
          @plugin_key = j_obj.plugin_key

          # conversion for plugin_name [type = java.lang.String]
          @plugin_name = j_obj.plugin_name

          # conversion for plugin_version [type = java.lang.String]
          @plugin_version = j_obj.plugin_version
          self
        end

      end
    end
  end
end
